using Baci.ArcGIS.Geoprocessor.Models;
using Baci.ArcGIS.Geoprocessor.Models.Attributes;
using Baci.ArcGIS.Geoprocessor.Models.Attributes.Domains;
using Baci.ArcGIS.Geoprocessor.Models.Attributes.DataTypes;
using Baci.ArcGIS.Geoprocessor.Models.Enums;
using System.Collections.Generic;
using System.ComponentModel;
using System;

namespace Baci.ArcGIS.Geoprocessor.DataManagementTools
{
	/// <summary>
	/// <para>Set Mosaic Dataset Properties</para>
	/// <para>Set Mosaic Dataset Properties</para>
	/// <para>Defines the defaults for displaying a mosaic dataset and serving it as an image service.</para>
	/// </summary>
	public class SetMosaicDatasetProperties : AbstractGPProcess
	{
		/// <summary>
		/// <para>Constructor that takes all required parameters for geoprocessor execution.</para>
		/// </summary>
		/// <param name="InMosaicDataset">
		/// <para>Mosaic Dataset</para>
		/// <para>The mosaic dataset with the properties that will be set.</para>
		/// </param>
		public SetMosaicDatasetProperties(object InMosaicDataset)
		{
			this.InMosaicDataset = InMosaicDataset;
		}

		/// <summary>
		/// <para>Tool Display Name : Set Mosaic Dataset Properties</para>
		/// </summary>
		public override string DisplayName() => "Set Mosaic Dataset Properties";

		/// <summary>
		/// <para>Tool Name : SetMosaicDatasetProperties</para>
		/// </summary>
		public override string ToolName() => "SetMosaicDatasetProperties";

		/// <summary>
		/// <para>Tool Excute Name : management.SetMosaicDatasetProperties</para>
		/// </summary>
		public override string ExcuteName() => "management.SetMosaicDatasetProperties";

		/// <summary>
		/// <para>Toolbox Display Name : Data Management Tools</para>
		/// </summary>
		public override string ToolboxDisplayName() => "Data Management Tools";

		/// <summary>
		/// <para>Toolbox Alise : management</para>
		/// </summary>
		public override string ToolboxAlise() => "management";

		/// <summary>
		/// <para>Valid Environment Params</para>
		/// </summary>
		public override string[] ValidEnvironments() => new string[] {  };

		/// <summary>
		/// <para>Tool Parametrs</para>
		/// </summary>
		public override object[] Parameters() => new object[] { InMosaicDataset, RowsMaximumImagesize!, ColumnsMaximumImagesize!, AllowedCompressions!, DefaultCompressionType!, JPEGQuality!, LERCTolerance!, ResamplingType!, ClipToFootprints!, FootprintsMayContainNodata!, ClipToBoundary!, ColorCorrection!, AllowedMensurationCapabilities!, DefaultMensurationCapabilities!, AllowedMosaicMethods!, DefaultMosaicMethod!, OrderField!, OrderBase!, SortingOrder!, MosaicOperator!, BlendWidth!, ViewPointX!, ViewPointY!, MaxNumPerMosaic!, CellSizeTolerance!, CellSize!, MetadataLevel!, TransmissionFields!, UseTime!, StartTimeField!, EndTimeField!, TimeFormat!, GeographicTransform!, MaxNumOfDownloadItems!, MaxNumOfRecordsReturned!, DataSourceType!, MinimumPixelContribution!, ProcessingTemplates!, DefaultProcessingTemplate!, OutMosaicDataset!, TimeInterval!, TimeIntervalUnits!, ProductDefinition!, ProductBandDefinitions! };

		/// <summary>
		/// <para>Mosaic Dataset</para>
		/// <para>The mosaic dataset with the properties that will be set.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.must)]
		[GPMosaicLayer()]
		public object InMosaicDataset { get; set; }

		/// <summary>
		/// <para>Rows of Maximum Image Size of Requests</para>
		/// <para>The maximum number of rows for the mosaicked image, generated by the mosaic dataset for each request. This can help control how much work the server has to do when clients view the imagery. A higher number will create a larger image but will also increase the amount of time to process the mosaic dataset. It is possible to set the value too small, in which case the image may not display.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPLong()]
		[Category("Image Properties")]
		public object? RowsMaximumImagesize { get; set; } = "4100";

		/// <summary>
		/// <para>Columns of Maximum Image Size of Requests</para>
		/// <para>The maximum number of columns for the mosaicked image, generated by the mosaic dataset for each request. This can help control how much work the server has to do when clients view the imagery. A higher number will create a larger image but will also increase the amount of time to process the mosaic dataset. It is possible to set the value too small, in which case the image may not display.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPLong()]
		[Category("Image Properties")]
		public object? ColumnsMaximumImagesize { get; set; } = "15000";

		/// <summary>
		/// <para>Allowed Transmission Compression</para>
		/// <para>Specifies the compression methods that will be used to transmit the mosaicked image from the computer to the display (or from the server to the client).</para>
		/// <para>None—No compression will be used.</para>
		/// <para>JPEG— Compression up to 8:1 will be used, which is suitable for backdrops.</para>
		/// <para>LZ77— Compression of approximately 2:1 will be used ,which is suitable for analysis.</para>
		/// <para>LERC—Compression between 10:1 and 20:1 will be used, which is fast and suitable for serving raw imagery with high bit depth (12 bit to 32 bit).</para>
		/// <para><see cref="AllowedCompressionsEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPMultiValue()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? AllowedCompressions { get; set; } = "LERC;LERC;LERC;LERC";

		/// <summary>
		/// <para>Default Compression Type</para>
		/// <para>Specifies the default compression type. The default compression must be in the list of values used for the Allowed Transmission Compression parameter or must be set in the mosaic dataset&apos;s Allowed Compression Methods property.</para>
		/// <para>None—No compression will be used.</para>
		/// <para>JPEG— Compression up to 8:1 will be used, which is suitable for backdrops.</para>
		/// <para>LZ77— Compression of approximately 2:1 will be used, which is suitable for analysis.</para>
		/// <para>LERC—Compression between 10:1 and 20:1 will be used, which is fast and suitable for serving raw imagery with high bit depth (12 bit to 32 bit).</para>
		/// <para><see cref="DefaultCompressionTypeEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? DefaultCompressionType { get; set; } = "None";

		/// <summary>
		/// <para>JPEG Quality</para>
		/// <para>The compression quality when using JPEG. Compression quality ranges from 1 to 100. A higher number means better image quality but less compression.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPLong()]
		[Category("Image Properties")]
		public object? JPEGQuality { get; set; } = "75";

		/// <summary>
		/// <para>LERC Tolerance</para>
		/// <para>The maximum per pixel error when using LERC compression. This value is specified in the units of the mosaic dataset. For example, if the error is 10 centimeters and the mosaic dataset is in meters, enter 0.1.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPDouble()]
		[Category("Image Properties")]
		public object? LERCTolerance { get; set; } = "0";

		/// <summary>
		/// <para>Resampling Technique</para>
		/// <para>Specifies how pixel values will be calculated when the dataset is displayed at small scales. Choose an appropriate technique based on the type of data.</para>
		/// <para>Nearest—The value of each pixel will be from the nearest corresponding pixel. This technique is suitable for discrete data, such as land cover.This is the fastest resampling technique. It minimizes the changes to pixel values since it uses the value from the nearest pixel.</para>
		/// <para>Bilinear—The value of each pixel will be calculated by averaging the values of the surrounding four pixels (based on distance). This technique is suitable for continuous data.</para>
		/// <para>Cubic—The value of each pixel will be calculated by fitting a smooth curve based on the surrounding 16 pixels. This technique produces the smoothest image but can create values outside of the range in the source data. It is suitable for continuous data.</para>
		/// <para>Majority—The value of each pixel is based on the most popular value within a 3 by 3 window. This technique is suitable for discrete data.</para>
		/// <para><see cref="ResamplingTypeEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? ResamplingType { get; set; } = "BILINEAR";

		/// <summary>
		/// <para>Clip To Footprints</para>
		/// <para>Specifies whether rasters will be clipped to the footprint. Often the raster dataset and its footprint have the same extent. If they differ, the raster dataset can be clipped to the footprint.</para>
		/// <para>Unchecked—The rasters will not be clipped to the footprint. This is the default.</para>
		/// <para>Checked—The rasters will be clipped to the footprint.</para>
		/// <para><see cref="ClipToFootprintsEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPBoolean()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? ClipToFootprints { get; set; } = "false";

		/// <summary>
		/// <para>Footprints May Contain NoData</para>
		/// <para>Specifies whether pixels with NoData values will be shown.</para>
		/// <para>Checked—Pixels with NoData values will be shown.</para>
		/// <para>Unchecked—Pixels with NoData values will not be shown. You may notice an improvement in performance; however, if the imagery does include NoData values, they will appear as holes in the mosaic dataset.</para>
		/// <para><see cref="FootprintsMayContainNodataEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPBoolean()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? FootprintsMayContainNodata { get; set; } = "true";

		/// <summary>
		/// <para>Clip To Boundary</para>
		/// <para>Specifies whether the mosaicked image will be clipped to the boundary. Often the mosaic dataset and its boundary have the same extent. If they differ, the mosaic dataset can be clipped to the boundary.</para>
		/// <para>Checked—The mosaicked image will be clipped to the boundary. This is the default.</para>
		/// <para>Unchecked—The mosaicked image will not be clipped to the boundary.</para>
		/// <para><see cref="ClipToBoundaryEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPBoolean()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? ClipToBoundary { get; set; } = "true";

		/// <summary>
		/// <para>Color Correction</para>
		/// <para>Specifies whether color correction will be used on the mosaic dataset.</para>
		/// <para>Unchecked—Color correction will not be used. This is the default.</para>
		/// <para>Checked—The color correction that has been set up for the mosaic dataset will be used.</para>
		/// <para><see cref="ColorCorrectionEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPBoolean()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? ColorCorrection { get; set; } = "false";

		/// <summary>
		/// <para>Allowed Mensuration Capabilities</para>
		/// <para>Specifies the measurements that will be performed on the mosaic dataset. The ability to perform vertical measurements is dependent on the imagery and may require a DEM.</para>
		/// <para>None—No mensuration capabilities will be performed.</para>
		/// <para>Basic—Ground measurements such as distance, point, centroid, and area calculations will be performed.</para>
		/// <para>Feature base to top of feature—Measurements from the base to the top of features will be performed. Rational polynomial coefficients must be imbedded in the imagery.</para>
		/// <para>Feature base to top of shadow—Measurements from the base of a feature to the top of its shadow will be performed. Sun azimuth and sun elevation information is required.</para>
		/// <para>Top of feature to top of shadow—Measurements from the top of a feature to the top of its shadow will be performed. Sun azimuth, sun elevation, and rational polynomial coefficients are required.</para>
		/// <para>Measure in 3D—Measurements in 3D will be performed if a DEM is available.</para>
		/// <para><see cref="AllowedMensurationCapabilitiesEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPMultiValue()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? AllowedMensurationCapabilities { get; set; }

		/// <summary>
		/// <para>Default Mensuration</para>
		/// <para>Specifies the default mensuration capability for the mosaic dataset. The default mensuration value must be set in the list of values used for the Allowed Mensuration Capabilities parameter or be set in the mosaic dataset&apos;s Mensuration Capabilities property.</para>
		/// <para>None—No mensuration capabilities will be performed.</para>
		/// <para>Basic— Ground measurements such as distance, point, centroid, and area calculations will be performed.</para>
		/// <para>Feature base to top of feature—Measurements from the base to the top of features will be performed. Rational polynomial coefficients must be imbedded in the imagery.</para>
		/// <para>Feature base to top of shadow—Measurements from the base of a feature to the top of its shadow will be performed. Sun azimuth and sun elevation information is required.</para>
		/// <para>Top of feature to top of shadow—Measurements from the top of a feature to the top of its shadow will be performed. Sun azimuth, sun elevation, and rational polynomial coefficients are required.</para>
		/// <para>Measure in 3D—Measurements in 3D will be performed if a DEM is available.</para>
		/// <para><see cref="DefaultMensurationCapabilitiesEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? DefaultMensurationCapabilities { get; set; } = "None";

		/// <summary>
		/// <para>Allowed Mosaic Methods</para>
		/// <para>Specifies the rules for displaying overlapping imagery.</para>
		/// <para>None—Rasters will be ordered based on the ObjectID field in the mosaic dataset attribute table.</para>
		/// <para>Center—Imagery that is closest to the center of the screen will be displayed.</para>
		/// <para>Northwest—Imagery that is closest to the northwest corner of the mosaic dataset boundary will be displayed.</para>
		/// <para>Lock raster—Selected raster datasets will be displayed.</para>
		/// <para>By attribute—Imagery will be displayed and prioritized based on a field in the attribute table.</para>
		/// <para>Nadir—Rasters with viewing angles closest to zero will be displayed.</para>
		/// <para>Viewpoint—Imagery that is closest to a selected viewing angle will be displayed.</para>
		/// <para>Seamline—Transitions between images will be smoothed using seamlines.</para>
		/// <para><see cref="AllowedMosaicMethodsEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPMultiValue()]
		[GPCodedValueDomain()]
		[Category("Mosaic Properties")]
		public object? AllowedMosaicMethods { get; set; } = "Center;NorthWest;LockRaster;ByAttribute;Nadir;Viewpoint;Seamline;None";

		/// <summary>
		/// <para>Default Mosaic Methods</para>
		/// <para>Specifies the mosaic method that will be used for views. The default mosaic method must be set in the list of values used for the Allowed Mosaic Methods parameter or be set in the mosaic dataset&apos;s Allowed Mosaic Methods property.</para>
		/// <para>None—Rasters will be ordered based on the ObjectID field in the mosaic dataset attribute table.</para>
		/// <para>Center—Imagery that is closest to the center of the screen will be displayed.</para>
		/// <para>Northwest—Imagery that is closest to the northwest corner of the mosaic dataset boundary will be displayed.</para>
		/// <para>Lock raster—Selected raster datasets will be displayed.</para>
		/// <para>By attribute—Imagery will be displayed and prioritized based on a field in the attribute table.</para>
		/// <para>Nadir—Rasters with viewing angles closest to zero will be displayed.</para>
		/// <para>Viewpoint—Imagery that is closest to a selected viewing angle will be displayed.</para>
		/// <para>Seamline—Transitions between images will be smoothed using seamlines.</para>
		/// <para><see cref="DefaultMosaicMethodEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Mosaic Properties")]
		public object? DefaultMosaicMethod { get; set; } = "Center";

		/// <summary>
		/// <para>Order Field</para>
		/// <para>The field that will be used when ordering rasters using the By attribute value of the Default Mosaic Methods parameter. The list of available fields are defined as those in the attribute table that are of type metadata and are integer. This list can include, but is not limited to, the following:</para>
		/// <para>MinPS</para>
		/// <para>MaxPS</para>
		/// <para>LowPS</para>
		/// <para>HighPS</para>
		/// <para>CenterX</para>
		/// <para>CenterY</para>
		/// <para>ZOrder</para>
		/// <para>Shape_Length</para>
		/// <para>Shape_Area</para>
		/// <para>If the field is a numeric or date field, the Order Base parameter must be set.</para>
		/// <para>This parameter is not needed if the By attribute value is not part of the Allowed Mosaic Methods list.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[Category("Mosaic Properties")]
		public object? OrderField { get; set; }

		/// <summary>
		/// <para>Order Base</para>
		/// <para>Sorts the rasters based on their difference from this value in the field selected in the Order Field parameter.</para>
		/// <para>If a Date attribute is used, it must be in one of the following formats:</para>
		/// <para>YYYY/MM/DD HH:mm:ss.s</para>
		/// <para>YYYY/MM/DD HH:mm:ss</para>
		/// <para>YYYY/MM/DD HH:mm</para>
		/// <para>YYYY/MM/DD HH</para>
		/// <para>YYYY/MM/DD</para>
		/// <para>YYYY/MM</para>
		/// <para>YYYY</para>
		/// <para>This parameter is required only if the By attribute value is specified for the Allowed Mosaic Methods parameter.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[Category("Mosaic Properties")]
		public object? OrderBase { get; set; }

		/// <summary>
		/// <para>Sorting Order Ascending</para>
		/// <para>Specifies whether the rasters will be sorted in an ascending or a descending order.</para>
		/// <para>Checked—Rasters will be sorted in an ascending order. This is the default.</para>
		/// <para>Unchecked—Rasters will be sorted in a descending order.</para>
		/// <para>This parameter is required only if the By attribute value is specified for the Allowed Mosaic Methods parameter.</para>
		/// <para><see cref="SortingOrderEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPBoolean()]
		[GPCodedValueDomain()]
		[Category("Mosaic Properties")]
		public object? SortingOrder { get; set; } = "true";

		/// <summary>
		/// <para>Mosaic Operator</para>
		/// <para>Specifies the rule that will be used for resolving overlapping pixels.</para>
		/// <para>First—The first image in the attribute table will be displayed.</para>
		/// <para>Last—The last image in the attribute table will be displayed.</para>
		/// <para>Minimum—The lowest pixel values will be displayed.</para>
		/// <para>Maximum—The highest pixel values will be displayed.</para>
		/// <para>Mean—The arithmetic mean will be used to average overlapping pixels.</para>
		/// <para>Blend—A distance weighted algorithm will be used to average overlapping pixels.</para>
		/// <para>Sum—All of the overlapping pixel values will be added together.</para>
		/// <para><see cref="MosaicOperatorEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Mosaic Properties")]
		public object? MosaicOperator { get; set; } = "FIRST";

		/// <summary>
		/// <para>Blend Width</para>
		/// <para>The number of pixels to which the Blend value of the Mosaic Operator parameter will be applied.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPLong()]
		[Category("Mosaic Properties")]
		public object? BlendWidth { get; set; } = "10";

		/// <summary>
		/// <para>View Point Spacing X</para>
		/// <para>A numeric value that will be used to horizontally shift the center of the image. The units are the same as the spatial reference system.</para>
		/// <para>This parameter is only applicable if the Allowed Mosaic Methods parameter is set to Viewpoint.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPDouble()]
		[Category("Mosaic Properties")]
		public object? ViewPointX { get; set; } = "600";

		/// <summary>
		/// <para>View Point Spacing Y</para>
		/// <para>A numeric value that will be used to vertically shift the center of the image. The units are the same as the spatial reference system.</para>
		/// <para>This parameter is only applicable if the Allowed Mosaic Methods parameter is set to Viewpoint.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPDouble()]
		[Category("Mosaic Properties")]
		public object? ViewPointY { get; set; } = "300";

		/// <summary>
		/// <para>Max Number Per Mosaic</para>
		/// <para>The maximum number of raster datasets that will be displayed at a given time in a mosaic dataset.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPLong()]
		[Category("Mosaic Properties")]
		public object? MaxNumPerMosaic { get; set; } = "20";

		/// <summary>
		/// <para>Cell Size Tolerance Factor</para>
		/// <para>The maximum pixel size difference that is allowed before images are considered to have a different cell pixel.</para>
		/// <para>This allows images of similar spatial resolutions to be considered as having the same nominal resolution. For example, with a factor of 0.1, all images with cell sizes within 10 percent of each other will be grouped for tools and operations that use cell sizes.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPDouble()]
		[Category("Mosaic Properties")]
		public object? CellSizeTolerance { get; set; } = "0.8";

		/// <summary>
		/// <para>Output Cell Size</para>
		/// <para>The cell size of the mosaic dataset using an existing raster dataset or its specified width (x) and height (y).</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPCellSizeXY()]
		[Category("Mosaic Properties")]
		public object? CellSize { get; set; }

		/// <summary>
		/// <para>Metadata Level</para>
		/// <para>Specifies the level of metadata that will be exposed from the server to a client when publishing the mosaic dataset.</para>
		/// <para>Full metadata—Metadata regarding the processing applied at the mosaic dataset level as well as metadata related to the individual raster datasets will be exposed.</para>
		/// <para>No metadata—No metadata will be exposed to the client.</para>
		/// <para>Basic metadata—Metadata related to individual raster datasets, such as the number of columns and rows, cell size, and spatial reference information will be exposed.</para>
		/// <para><see cref="MetadataLevelEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Catalog Item Properties")]
		public object? MetadataLevel { get; set; } = "FULL";

		/// <summary>
		/// <para>Allowed Transmission Field</para>
		/// <para>The fields in the attribute table that clients can view. By default, the list includes the following:</para>
		/// <para>Name</para>
		/// <para>MinPS</para>
		/// <para>MaxPS</para>
		/// <para>LowPS</para>
		/// <para>HighPS</para>
		/// <para>Tag</para>
		/// <para>GroupName</para>
		/// <para>ProductName</para>
		/// <para>CenterX</para>
		/// <para>CenterY</para>
		/// <para>ZOrder</para>
		/// <para>Shape_Length</para>
		/// <para>Shape_Area</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPMultiValue()]
		[Category("Catalog Item Properties")]
		public object? TransmissionFields { get; set; }

		/// <summary>
		/// <para>Use Time</para>
		/// <para>Specifies whether the mosaic dataset will be time aware. If time is activated, the start and end fields and the time format must be specified.</para>
		/// <para>Unchecked—The mosaic dataset will not be time aware. This is the default.</para>
		/// <para>Checked—The mosaic dataset will be time aware. This allows the client to use the Time Slider.</para>
		/// <para><see cref="UseTimeEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPBoolean()]
		[GPCodedValueDomain()]
		[Category("Catalog Item Properties")]
		public object? UseTime { get; set; } = "false";

		/// <summary>
		/// <para>Start Time Field</para>
		/// <para>The field in the attribute table that shows the start time.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[Category("Catalog Item Properties")]
		public object? StartTimeField { get; set; }

		/// <summary>
		/// <para>End Time Field</para>
		/// <para>The field in the attribute table that shows the end time.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[Category("Catalog Item Properties")]
		public object? EndTimeField { get; set; }

		/// <summary>
		/// <para>Time Format</para>
		/// <para>Specifies the time format for the mosaic dataset for parameters such as Start Time Field and End Time Field.</para>
		/// <para>YYYY (Year)—Year</para>
		/// <para>YYYYMM (Year and month)—Year and month</para>
		/// <para>YYYY/MM (Year and month)—Year and month</para>
		/// <para>YYYY-MM (Year and month)—Year and month</para>
		/// <para>YYYYMMDD (Year, month, and day)—Year, month, and day</para>
		/// <para>YYYY/MM/DD (Year, month, and day)—Year, month, and day</para>
		/// <para>YYYY-MM-DD (Year, month, and day)—Year, month, and day</para>
		/// <para>YYYYMMDDhhmmss (Year, month, day, hour, minute, and seconds)—Year, month, day, hour, minute, and seconds</para>
		/// <para>YYYY/MM/DD hh:mm:ss (Year, month, day, hour, minute, and seconds)—Year, month, day, hour, minute, and seconds</para>
		/// <para>YYYY-MM-DD hh:mm:ss (Year, month, day, hour, minute, and seconds)—Year, month, day, hour, minute, and seconds</para>
		/// <para>YYYYMMDDhhmmss.s (Year, month, day, hour, minute, seconds, and fraction of seconds)—Year, month, day, hour, minute, seconds, and fraction of seconds</para>
		/// <para>YYYY/MM/DD hh:mm:ss.s (Year, month, day, hour, minute, seconds, and fraction of seconds)—Year, month, day, hour, minute, seconds, and fraction of seconds</para>
		/// <para>YYYY-MM-DD hh:mm:ss.s (Year, month, day, hour, minute, seconds, and fraction of seconds)—Year, month, day, hour, minute, seconds, and fraction of seconds</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Catalog Item Properties")]
		public object? TimeFormat { get; set; }

		/// <summary>
		/// <para>Geographic Transformation</para>
		/// <para>The geographic transformations to associate with the mosaic dataset.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPMultiValue()]
		[Category("Catalog Item Properties")]
		public object? GeographicTransform { get; set; }

		/// <summary>
		/// <para>Max Number of Download Items</para>
		/// <para>The maximum number of raster datasets that can be downloaded per request.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPLong()]
		[Category("Catalog Item Properties")]
		public object? MaxNumOfDownloadItems { get; set; } = "20";

		/// <summary>
		/// <para>Max Number of Records Returned</para>
		/// <para>The maximum number of records that can be downloaded per request.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPLong()]
		[Category("Catalog Item Properties")]
		public object? MaxNumOfRecordsReturned { get; set; } = "1000";

		/// <summary>
		/// <para>Data Source Type</para>
		/// <para>Specifies the type of imagery in the mosaic dataset.</para>
		/// <para>Generic—The mosaic dataset contains no specified data type.</para>
		/// <para>Thematic—The mosaic dataset contains thematic data with discrete values, such as land cover.</para>
		/// <para>Processed—The mosaic dataset has been color adjusted.</para>
		/// <para>Elevation—The mosaic dataset contains elevation data.</para>
		/// <para>Scientific—The mosaic dataset contains scientific data.</para>
		/// <para>Two variable vector—The mosaic dataset has two variables.</para>
		/// <para>Magnitude and direction—The mosaic dataset has magnitude and direction.</para>
		/// <para><see cref="DataSourceTypeEnum"/></para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Image Properties")]
		public object? DataSourceType { get; set; } = "GENERIC";

		/// <summary>
		/// <para>Minimum Pixel Contribution</para>
		/// <para>The minimum number of pixels required for a mosaic dataset item to be considered significant enough to be used in the mosaic dataset. Because of overlapping imagery, an item may display only a small sliver of its overall image. Skipping these mosaic dataset items will improve performance of the mosaic dataset.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPLong()]
		[Category("Catalog Item Properties")]
		public object? MinimumPixelContribution { get; set; } = "1";

		/// <summary>
		/// <para>Processing Templates</para>
		/// <para>The function chains that will be used to process a mosaic dataset or the mosaic dataset items on the fly. You can add, remove, or reorder the function chains.</para>
		/// <para>All the template names that are added must be unique.</para>
		/// <para>For information on how to work with function chains, see Raster function template.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPMultiValue()]
		[GPFileDomain()]
		[FileTypes("rft.xml", "rft.json", "rft", "xml", "json")]
		[Category("Image Properties")]
		public object? ProcessingTemplates { get; set; }

		/// <summary>
		/// <para>Default Processing Template</para>
		/// <para>The default function chain. The default function chain will be applied when the mosaic dataset is accessed.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[Category("Image Properties")]
		public object? DefaultProcessingTemplate { get; set; } = "None";

		/// <summary>
		/// <para>Updated Mosaic Dataset</para>
		/// </summary>
		[ParamType(ParamTypeEnum.derived)]
		[GPMosaicLayer()]
		public object? OutMosaicDataset { get; set; }

		/// <summary>
		/// <para>Time Interval</para>
		/// <para>The duration of each time step interval. The time step interval defines the granularity of the temporal data. The unit of time is specified in the Time Interval Units parameter.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPDouble()]
		[Category("Catalog Item Properties")]
		public object? TimeInterval { get; set; }

		/// <summary>
		/// <para>Time Interval Units</para>
		/// <para>Specifies the measurement unit that will be used for the time interval.</para>
		/// <para>None—No time unit exists or it is unknown.</para>
		/// <para>Milliseconds—The time unit will be milliseconds.</para>
		/// <para>Seconds—The time unit will be seconds.</para>
		/// <para>Minutes—The time unit will be minutes.</para>
		/// <para>Hours—The time unit will be hours.</para>
		/// <para>Days—The time unit will be days.</para>
		/// <para>Weeks—The time unit will be weeks.</para>
		/// <para>Months—The time unit will be months.</para>
		/// <para>Years—The time unit will be years.</para>
		/// <para>Decades—The time unit will be decades.</para>
		/// <para>Centuries—The time unit will be centuries.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Catalog Item Properties")]
		public object? TimeIntervalUnits { get; set; }

		/// <summary>
		/// <para>Product Definition</para>
		/// <para>Specifies a template that is either specific to the type of imagery you are working with or generic. The generic options include the standard supported raster sensor types as follows:</para>
		/// <para>None—No band ordering is specified for the mosaic dataset. This is the default.</para>
		/// <para>Natural color—A 3-band mosaic dataset, with red, green, and blue wavelength ranges will be created. This is designed for natural color imagery.</para>
		/// <para>Natural color and infrared—A 4-band mosaic dataset, with red, green, blue, and near infrared wavelength ranges will be created.</para>
		/// <para>U and V—A mosaic dataset displaying two variables will be created.</para>
		/// <para>Magnitude and Direction—A mosaic dataset displaying magnitude and direction will be created.</para>
		/// <para>Color infrared—A 3-band mosaic dataset, with near infrared, red, and green wavelength ranges will be created.</para>
		/// <para>DMCii—A 3-band mosaic dataset using the DMCii wavelength ranges will be created.</para>
		/// <para>Deimos-2—A 4-band mosaic dataset using the Deimos-2 wavelength ranges will be created.</para>
		/// <para>DubaiSat-2—A 4-band mosaic dataset using the DubaiSat-2 wavelength ranges will be created.</para>
		/// <para>FORMOSAT-2—A 4-band mosaic dataset using the FORMOSAT-2 wavelength ranges will be created.</para>
		/// <para>GeoEye-1—A 4-band mosaic dataset using the GeoEye-1 wavelength ranges will be created.</para>
		/// <para>GF-1 Panchromatic/Multispectral (PMS)—A 4-band mosaic dataset using the Gaofen-1 Panchromatic Multispectral Sensor wavelength ranges will be created.</para>
		/// <para>GF-1 Wide Field of View (WFV)—A 4-band mosaic dataset using the Gaofen-1 Wide Field of View Sensor wavelength ranges will be created.</para>
		/// <para>GF-2 Panchromatic/Multispectral (PMS)—A 4-band mosaic dataset using the Gaofen-2 Panchromatic Multispectral Sensor wavelength ranges will be created.</para>
		/// <para>GF-4 Panchromatic/Multispectral Imagery (PMI)—A 4-band mosaic dataset using the Gaofen-4 panchromatic and multispectral wavelength ranges will be created.</para>
		/// <para>HJ 1A/1B Multispectral/Hyperspectral—A 4-band mosaic dataset using the Huan Jing-1 CCD Multispectral or Hyperspectral Sensor wavelength ranges will be created.</para>
		/// <para>IKONOS—A 4-band mosaic dataset using the IKONOS wavelength ranges will be created.</para>
		/// <para>Jilin-1—A 3-band mosaic dataset using the Jilin-1 wavelength ranges will be created.</para>
		/// <para>KOMPSAT-2—A 4-band mosaic dataset using the KOMPSAT-2 wavelength ranges will be created.</para>
		/// <para>KOMPSAT-3—A 4-band mosaic dataset using the KOMPSAT-3 wavelength ranges will be created.</para>
		/// <para>Landsat TM and ETM+—A 6-band mosaic dataset using the Landsat 5 and 7 wavelength ranges from the TM and ETM+ sensors will be created.</para>
		/// <para>Landsat OLI—An 8-band mosaic dataset using the LANDSAT 8 wavelength ranges will be created.</para>
		/// <para>Landsat 9—An 8-band mosaic dataset using the LANDSAT 9 wavelength ranges will be created.</para>
		/// <para>Landsat MSS—A 4-band mosaic dataset using the Landsat wavelength ranges from the MSS sensor will be created.</para>
		/// <para>Pleiades 1—A 4-band mosaic dataset using the PLEIADES-1 wavelength ranges will be created.</para>
		/// <para>Pleiades Neo—A 6-band mosaic dataset using the Pleiades Neo wavelength ranges will be created.</para>
		/// <para>QuickBird—A 4-band mosaic dataset using the QuickBird wavelength ranges will be created.</para>
		/// <para>RapidEye—A 5-band mosaic dataset using the RapidEye wavelength ranges will be created.</para>
		/// <para>Sentinel 2 MSI—A 13-band mosaic dataset using the Sentinel 2 MSI wavelength ranges will be created.</para>
		/// <para>SkySat-C—A 4-band mosaic dataset using the SkySat-C MSI wavelength ranges will be created.</para>
		/// <para>SPOT-5—A 4-band mosaic dataset using the SPOT-5 wavelength ranges will be created.</para>
		/// <para>SPOT-6—A 4-band mosaic dataset using the SPOT-6 wavelength ranges will be created.</para>
		/// <para>SPOT-7—A 4-band mosaic dataset using the SPOT-7 wavelength ranges will be created.</para>
		/// <para>SuperView-1—A 4-band mosaic dataset using the SuperView-1 wavelength ranges will be created.</para>
		/// <para>TH-01—A 4-band mosaic dataset using the Tian Hui-1 wavelength ranges will be created.</para>
		/// <para>WorldView-2—An 8-band mosaic dataset using the WorldView-2 wavelength ranges will be created.</para>
		/// <para>WorldView-3—An 8-band mosaic dataset using the WorldView-3 wavelength ranges will be created.</para>
		/// <para>WorldView-4—A 4-band mosaic dataset using the WorldView-4 wavelength ranges will be created.</para>
		/// <para>ZY-1 Panchromatic/Multispectral—A 3-band mosaic dataset using the ZiYuan-1 panchromatic/multispectral wavelength ranges will be created.</para>
		/// <para>ZY-3 CRESDA—A 4-band mosaic dataset using the ZiYuan-3 CRESDA wavelength ranges will be created.</para>
		/// <para>ZY3 SASMAC—A 4-band mosaic dataset using the ZiYuan-3 SASMAC wavelength ranges will be created.</para>
		/// <para>Custom—The number of bands and the average wavelength for each band are defined using the Product Band Definitions parameter (product_band_definitions in Python).</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPString()]
		[GPCodedValueDomain()]
		[Category("Mosaic Properties")]
		public object? ProductDefinition { get; set; } = "NONE";

		/// <summary>
		/// <para>Product Band Definitions</para>
		/// <para>The wavelength ranges, number of bands, and band order definitions. To edit the number of bands, use the Add another and Remove controls. To rearrange the band order, right-click a band definition and move the band up or down in the list.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPValueTable()]
		[Category("Mosaic Properties")]
		public object? ProductBandDefinitions { get; set; }

		#region InnerClass

		/// <summary>
		/// <para>Allowed Transmission Compression</para>
		/// </summary>
		public enum AllowedCompressionsEnum 
		{
			/// <summary>
			/// <para>None—No compression will be used.</para>
			/// </summary>
			[GPValue("None")]
			[Description("None")]
			None,

			/// <summary>
			/// <para>JPEG— Compression up to 8:1 will be used, which is suitable for backdrops.</para>
			/// </summary>
			[GPValue("JPEG")]
			[Description("JPEG")]
			JPEG,

			/// <summary>
			/// <para>LZ77— Compression of approximately 2:1 will be used ,which is suitable for analysis.</para>
			/// </summary>
			[GPValue("LZ77")]
			[Description("LZ77")]
			LZ77,

			/// <summary>
			/// <para>LERC—Compression between 10:1 and 20:1 will be used, which is fast and suitable for serving raw imagery with high bit depth (12 bit to 32 bit).</para>
			/// </summary>
			[GPValue("LERC")]
			[Description("LERC")]
			LERC,

		}

		/// <summary>
		/// <para>Default Compression Type</para>
		/// </summary>
		public enum DefaultCompressionTypeEnum 
		{
			/// <summary>
			/// <para>None—No compression will be used.</para>
			/// </summary>
			[GPValue("None")]
			[Description("None")]
			None,

			/// <summary>
			/// <para>JPEG— Compression up to 8:1 will be used, which is suitable for backdrops.</para>
			/// </summary>
			[GPValue("JPEG")]
			[Description("JPEG")]
			JPEG,

			/// <summary>
			/// <para>LZ77— Compression of approximately 2:1 will be used, which is suitable for analysis.</para>
			/// </summary>
			[GPValue("LZ77")]
			[Description("LZ77")]
			LZ77,

			/// <summary>
			/// <para>LERC—Compression between 10:1 and 20:1 will be used, which is fast and suitable for serving raw imagery with high bit depth (12 bit to 32 bit).</para>
			/// </summary>
			[GPValue("LERC")]
			[Description("LERC")]
			LERC,

		}

		/// <summary>
		/// <para>Resampling Technique</para>
		/// </summary>
		public enum ResamplingTypeEnum 
		{
			/// <summary>
			/// <para>Nearest—The value of each pixel will be from the nearest corresponding pixel. This technique is suitable for discrete data, such as land cover.This is the fastest resampling technique. It minimizes the changes to pixel values since it uses the value from the nearest pixel.</para>
			/// </summary>
			[GPValue("NEAREST")]
			[Description("Nearest")]
			Nearest,

			/// <summary>
			/// <para>Bilinear—The value of each pixel will be calculated by averaging the values of the surrounding four pixels (based on distance). This technique is suitable for continuous data.</para>
			/// </summary>
			[GPValue("BILINEAR")]
			[Description("Bilinear")]
			Bilinear,

			/// <summary>
			/// <para>Cubic—The value of each pixel will be calculated by fitting a smooth curve based on the surrounding 16 pixels. This technique produces the smoothest image but can create values outside of the range in the source data. It is suitable for continuous data.</para>
			/// </summary>
			[GPValue("CUBIC")]
			[Description("Cubic")]
			Cubic,

			/// <summary>
			/// <para>Majority—The value of each pixel is based on the most popular value within a 3 by 3 window. This technique is suitable for discrete data.</para>
			/// </summary>
			[GPValue("MAJORITY")]
			[Description("Majority")]
			Majority,

		}

		/// <summary>
		/// <para>Clip To Footprints</para>
		/// </summary>
		public enum ClipToFootprintsEnum 
		{
			/// <summary>
			/// <para>Checked—The rasters will be clipped to the footprint.</para>
			/// </summary>
			[GPValue("true")]
			[Description("CLIP")]
			CLIP,

			/// <summary>
			/// <para>Unchecked—The rasters will not be clipped to the footprint. This is the default.</para>
			/// </summary>
			[GPValue("false")]
			[Description("NOT_CLIP")]
			NOT_CLIP,

		}

		/// <summary>
		/// <para>Footprints May Contain NoData</para>
		/// </summary>
		public enum FootprintsMayContainNodataEnum 
		{
			/// <summary>
			/// <para>Checked—Pixels with NoData values will be shown.</para>
			/// </summary>
			[GPValue("true")]
			[Description("FOOTPRINTS_MAY_CONTAIN_NODATA")]
			FOOTPRINTS_MAY_CONTAIN_NODATA,

			/// <summary>
			/// <para>Unchecked—Pixels with NoData values will not be shown. You may notice an improvement in performance; however, if the imagery does include NoData values, they will appear as holes in the mosaic dataset.</para>
			/// </summary>
			[GPValue("false")]
			[Description("FOOTPRINTS_DO_NOT_CONTAIN_NODATA")]
			FOOTPRINTS_DO_NOT_CONTAIN_NODATA,

		}

		/// <summary>
		/// <para>Clip To Boundary</para>
		/// </summary>
		public enum ClipToBoundaryEnum 
		{
			/// <summary>
			/// <para>Checked—The mosaicked image will be clipped to the boundary. This is the default.</para>
			/// </summary>
			[GPValue("true")]
			[Description("CLIP")]
			CLIP,

			/// <summary>
			/// <para>Unchecked—The mosaicked image will not be clipped to the boundary.</para>
			/// </summary>
			[GPValue("false")]
			[Description("NOT_CLIP")]
			NOT_CLIP,

		}

		/// <summary>
		/// <para>Color Correction</para>
		/// </summary>
		public enum ColorCorrectionEnum 
		{
			/// <summary>
			/// <para>Checked—The color correction that has been set up for the mosaic dataset will be used.</para>
			/// </summary>
			[GPValue("true")]
			[Description("APPLY")]
			APPLY,

			/// <summary>
			/// <para>Unchecked—Color correction will not be used. This is the default.</para>
			/// </summary>
			[GPValue("false")]
			[Description("NOT_APPLY")]
			NOT_APPLY,

		}

		/// <summary>
		/// <para>Allowed Mensuration Capabilities</para>
		/// </summary>
		public enum AllowedMensurationCapabilitiesEnum 
		{
			/// <summary>
			/// <para>None—No mensuration capabilities will be performed.</para>
			/// </summary>
			[GPValue("None")]
			[Description("None")]
			None,

			/// <summary>
			/// <para>Basic—Ground measurements such as distance, point, centroid, and area calculations will be performed.</para>
			/// </summary>
			[GPValue("Basic")]
			[Description("Basic")]
			Basic,

			/// <summary>
			/// <para>Feature base to top of feature—Measurements from the base to the top of features will be performed. Rational polynomial coefficients must be imbedded in the imagery.</para>
			/// </summary>
			[GPValue("Base-Top Height")]
			[Description("Feature base to top of feature")]
			Feature_base_to_top_of_feature,

			/// <summary>
			/// <para>Feature base to top of shadow—Measurements from the base of a feature to the top of its shadow will be performed. Sun azimuth and sun elevation information is required.</para>
			/// </summary>
			[GPValue("Base-Top Shadow Height")]
			[Description("Feature base to top of shadow")]
			Feature_base_to_top_of_shadow,

			/// <summary>
			/// <para>Top of feature to top of shadow—Measurements from the top of a feature to the top of its shadow will be performed. Sun azimuth, sun elevation, and rational polynomial coefficients are required.</para>
			/// </summary>
			[GPValue("Top-Top Shadow Height")]
			[Description("Top of feature to top of shadow")]
			Top_of_feature_to_top_of_shadow,

			/// <summary>
			/// <para>Measure in 3D—Measurements in 3D will be performed if a DEM is available.</para>
			/// </summary>
			[GPValue("3D")]
			[Description("Measure in 3D")]
			Measure_in_3D,

		}

		/// <summary>
		/// <para>Default Mensuration</para>
		/// </summary>
		public enum DefaultMensurationCapabilitiesEnum 
		{
			/// <summary>
			/// <para>None—No mensuration capabilities will be performed.</para>
			/// </summary>
			[GPValue("None")]
			[Description("None")]
			None,

			/// <summary>
			/// <para>Basic— Ground measurements such as distance, point, centroid, and area calculations will be performed.</para>
			/// </summary>
			[GPValue("Basic")]
			[Description("Basic")]
			Basic,

			/// <summary>
			/// <para>Feature base to top of feature—Measurements from the base to the top of features will be performed. Rational polynomial coefficients must be imbedded in the imagery.</para>
			/// </summary>
			[GPValue("Base-Top Height")]
			[Description("Feature base to top of feature")]
			Feature_base_to_top_of_feature,

			/// <summary>
			/// <para>Feature base to top of shadow—Measurements from the base of a feature to the top of its shadow will be performed. Sun azimuth and sun elevation information is required.</para>
			/// </summary>
			[GPValue("Base-Top Shadow Height")]
			[Description("Feature base to top of shadow")]
			Feature_base_to_top_of_shadow,

			/// <summary>
			/// <para>Top of feature to top of shadow—Measurements from the top of a feature to the top of its shadow will be performed. Sun azimuth, sun elevation, and rational polynomial coefficients are required.</para>
			/// </summary>
			[GPValue("Top-Top Shadow Height")]
			[Description("Top of feature to top of shadow")]
			Top_of_feature_to_top_of_shadow,

			/// <summary>
			/// <para>Measure in 3D—Measurements in 3D will be performed if a DEM is available.</para>
			/// </summary>
			[GPValue("3D")]
			[Description("Measure in 3D")]
			Measure_in_3D,

		}

		/// <summary>
		/// <para>Allowed Mosaic Methods</para>
		/// </summary>
		public enum AllowedMosaicMethodsEnum 
		{
			/// <summary>
			/// <para>None—Rasters will be ordered based on the ObjectID field in the mosaic dataset attribute table.</para>
			/// </summary>
			[GPValue("None")]
			[Description("None")]
			None,

			/// <summary>
			/// <para>Center—Imagery that is closest to the center of the screen will be displayed.</para>
			/// </summary>
			[GPValue("Center")]
			[Description("Center")]
			Center,

			/// <summary>
			/// <para>Northwest—Imagery that is closest to the northwest corner of the mosaic dataset boundary will be displayed.</para>
			/// </summary>
			[GPValue("NorthWest")]
			[Description("Northwest")]
			Northwest,

			/// <summary>
			/// <para>Lock raster—Selected raster datasets will be displayed.</para>
			/// </summary>
			[GPValue("LockRaster")]
			[Description("Lock raster")]
			Lock_raster,

			/// <summary>
			/// <para>By attribute—Imagery will be displayed and prioritized based on a field in the attribute table.</para>
			/// </summary>
			[GPValue("ByAttribute")]
			[Description("By attribute")]
			By_attribute,

			/// <summary>
			/// <para>Nadir—Rasters with viewing angles closest to zero will be displayed.</para>
			/// </summary>
			[GPValue("Nadir")]
			[Description("Nadir")]
			Nadir,

			/// <summary>
			/// <para>Viewpoint—Imagery that is closest to a selected viewing angle will be displayed.</para>
			/// </summary>
			[GPValue("Viewpoint")]
			[Description("Viewpoint")]
			Viewpoint,

			/// <summary>
			/// <para>Seamline—Transitions between images will be smoothed using seamlines.</para>
			/// </summary>
			[GPValue("Seamline")]
			[Description("Seamline")]
			Seamline,

		}

		/// <summary>
		/// <para>Default Mosaic Methods</para>
		/// </summary>
		public enum DefaultMosaicMethodEnum 
		{
			/// <summary>
			/// <para>None—Rasters will be ordered based on the ObjectID field in the mosaic dataset attribute table.</para>
			/// </summary>
			[GPValue("None")]
			[Description("None")]
			None,

			/// <summary>
			/// <para>Center—Imagery that is closest to the center of the screen will be displayed.</para>
			/// </summary>
			[GPValue("Center")]
			[Description("Center")]
			Center,

			/// <summary>
			/// <para>Northwest—Imagery that is closest to the northwest corner of the mosaic dataset boundary will be displayed.</para>
			/// </summary>
			[GPValue("NorthWest")]
			[Description("Northwest")]
			Northwest,

			/// <summary>
			/// <para>Lock raster—Selected raster datasets will be displayed.</para>
			/// </summary>
			[GPValue("LockRaster")]
			[Description("Lock raster")]
			Lock_raster,

			/// <summary>
			/// <para>By attribute—Imagery will be displayed and prioritized based on a field in the attribute table.</para>
			/// </summary>
			[GPValue("ByAttribute")]
			[Description("By attribute")]
			By_attribute,

			/// <summary>
			/// <para>Nadir—Rasters with viewing angles closest to zero will be displayed.</para>
			/// </summary>
			[GPValue("Nadir")]
			[Description("Nadir")]
			Nadir,

			/// <summary>
			/// <para>Viewpoint—Imagery that is closest to a selected viewing angle will be displayed.</para>
			/// </summary>
			[GPValue("Viewpoint")]
			[Description("Viewpoint")]
			Viewpoint,

			/// <summary>
			/// <para>Seamline—Transitions between images will be smoothed using seamlines.</para>
			/// </summary>
			[GPValue("Seamline")]
			[Description("Seamline")]
			Seamline,

		}

		/// <summary>
		/// <para>Sorting Order Ascending</para>
		/// </summary>
		public enum SortingOrderEnum 
		{
			/// <summary>
			/// <para>Checked—Rasters will be sorted in an ascending order. This is the default.</para>
			/// </summary>
			[GPValue("true")]
			[Description("ASCENDING")]
			ASCENDING,

			/// <summary>
			/// <para>Unchecked—Rasters will be sorted in a descending order.</para>
			/// </summary>
			[GPValue("false")]
			[Description("DESCENDING")]
			DESCENDING,

		}

		/// <summary>
		/// <para>Mosaic Operator</para>
		/// </summary>
		public enum MosaicOperatorEnum 
		{
			/// <summary>
			/// <para>First—The first image in the attribute table will be displayed.</para>
			/// </summary>
			[GPValue("FIRST")]
			[Description("First")]
			First,

			/// <summary>
			/// <para>Last—The last image in the attribute table will be displayed.</para>
			/// </summary>
			[GPValue("LAST")]
			[Description("Last")]
			Last,

			/// <summary>
			/// <para>Minimum—The lowest pixel values will be displayed.</para>
			/// </summary>
			[GPValue("MIN")]
			[Description("Minimum")]
			Minimum,

			/// <summary>
			/// <para>Maximum—The highest pixel values will be displayed.</para>
			/// </summary>
			[GPValue("MAX")]
			[Description("Maximum")]
			Maximum,

			/// <summary>
			/// <para>Mean—The arithmetic mean will be used to average overlapping pixels.</para>
			/// </summary>
			[GPValue("MEAN")]
			[Description("Mean")]
			Mean,

			/// <summary>
			/// <para>Blend—A distance weighted algorithm will be used to average overlapping pixels.</para>
			/// </summary>
			[GPValue("BLEND")]
			[Description("Blend")]
			Blend,

			/// <summary>
			/// <para>Sum—All of the overlapping pixel values will be added together.</para>
			/// </summary>
			[GPValue("SUM")]
			[Description("Sum")]
			Sum,

		}

		/// <summary>
		/// <para>Metadata Level</para>
		/// </summary>
		public enum MetadataLevelEnum 
		{
			/// <summary>
			/// <para>No metadata—No metadata will be exposed to the client.</para>
			/// </summary>
			[GPValue("NONE")]
			[Description("No metadata")]
			No_metadata,

			/// <summary>
			/// <para>Basic metadata—Metadata related to individual raster datasets, such as the number of columns and rows, cell size, and spatial reference information will be exposed.</para>
			/// </summary>
			[GPValue("BASIC")]
			[Description("Basic metadata")]
			Basic_metadata,

			/// <summary>
			/// <para>Full metadata—Metadata regarding the processing applied at the mosaic dataset level as well as metadata related to the individual raster datasets will be exposed.</para>
			/// </summary>
			[GPValue("FULL")]
			[Description("Full metadata")]
			Full_metadata,

		}

		/// <summary>
		/// <para>Use Time</para>
		/// </summary>
		public enum UseTimeEnum 
		{
			/// <summary>
			/// <para>Checked—The mosaic dataset will be time aware. This allows the client to use the Time Slider.</para>
			/// </summary>
			[GPValue("true")]
			[Description("ENABLED")]
			ENABLED,

			/// <summary>
			/// <para>Unchecked—The mosaic dataset will not be time aware. This is the default.</para>
			/// </summary>
			[GPValue("false")]
			[Description("DISABLED")]
			DISABLED,

		}

		/// <summary>
		/// <para>Data Source Type</para>
		/// </summary>
		public enum DataSourceTypeEnum 
		{
			/// <summary>
			/// <para>Generic—The mosaic dataset contains no specified data type.</para>
			/// </summary>
			[GPValue("GENERIC")]
			[Description("Generic")]
			Generic,

			/// <summary>
			/// <para>Thematic—The mosaic dataset contains thematic data with discrete values, such as land cover.</para>
			/// </summary>
			[GPValue("THEMATIC")]
			[Description("Thematic")]
			Thematic,

			/// <summary>
			/// <para>Processed—The mosaic dataset has been color adjusted.</para>
			/// </summary>
			[GPValue("PROCESSED")]
			[Description("Processed")]
			Processed,

			/// <summary>
			/// <para>Elevation—The mosaic dataset contains elevation data.</para>
			/// </summary>
			[GPValue("ELEVATION")]
			[Description("Elevation")]
			Elevation,

			/// <summary>
			/// <para>Scientific—The mosaic dataset contains scientific data.</para>
			/// </summary>
			[GPValue("SCIENTIFIC")]
			[Description("Scientific")]
			Scientific,

			/// <summary>
			/// <para>Two variable vector—The mosaic dataset has two variables.</para>
			/// </summary>
			[GPValue("VECTOR_UV")]
			[Description("Two variable vector")]
			Two_variable_vector,

			/// <summary>
			/// <para>Magnitude and direction—The mosaic dataset has magnitude and direction.</para>
			/// </summary>
			[GPValue("VECTOR_MAGDIR")]
			[Description("Magnitude and direction")]
			Magnitude_and_direction,

		}

#endregion
	}
}
