using Baci.ArcGIS.Geoprocessor.Models;
using Baci.ArcGIS.Geoprocessor.Models.Attributes;
using Baci.ArcGIS.Geoprocessor.Models.Attributes.Domains;
using Baci.ArcGIS.Geoprocessor.Models.Attributes.DataTypes;
using Baci.ArcGIS.Geoprocessor.Models.Enums;
using System.Collections.Generic;
using System.ComponentModel;
using System;

namespace Baci.ArcGIS.Geoprocessor.GeocodingTools
{
	/// <summary>
	/// <para>Create Composite Address Locator</para>
	/// <para>Creates a composite address locator. A composite locator consists of two or more individual  locators that allow addresses to be matched using the multiple locators.</para>
	/// </summary>
	public class CreateCompositeAddressLocator : AbstractGPProcess
	{
		/// <summary>
		/// <para>Constructor that takes all required parameters for geoprocessor execution.</para>
		/// </summary>
		/// <param name="InAddressLocators">
		/// <para>Address Locators</para>
		/// <para>The locators that will be used to create the composite locator. The order of the participating locators determines how candidates are searched and a place or address is matched. When you geocode a single place or address, the place or address will be matched against all participating locators unless the locator is specified with a selection criterion. All the found candidates will be displayed based on the order of the listed participating locators. If you geocode a table of addresses or places, addresses or places are matched automatically to the first best candidate found from the first participating locators. If the address or place fails to match, it will fall back to the subsequent locator in the list.</para>
		/// <para>A reference name for each participating locator is required. This is the name of the locator referred to by the composite locator. Do not use spaces or special symbols in the name. The maximum length of the name is 14 characters.</para>
		/// </param>
		/// <param name="InFieldMap">
		/// <para>Field Map</para>
		/// <para>The mapping of input fields used by each participating locator to the input fields of the composite locator.</para>
		/// <para>The fields and field contents that are generated by the participating locators. Each of the unique input fields is listed in the Field Map section. When you expand the section, a list of all the input field occurrences (subfields) for each participating address locator is shown. These fields are the input fields for the composite address locator. If there are duplicate fields such as ZIP and Postcode because of the unique names populated from the participating address locators, you can group the subfields by dragging them to the appropriate field or use the Arrow Up or Arrow Down button to move the subfield.</para>
		/// </param>
		/// <param name="OutCompositeAddressLocator">
		/// <para>Output Composite Address Locator</para>
		/// <para>The composite address locator that will be created. ArcGIS Pro only supports saving locators in a file folder.</para>
		/// </param>
		public CreateCompositeAddressLocator(object InAddressLocators, object InFieldMap, object OutCompositeAddressLocator)
		{
			this.InAddressLocators = InAddressLocators;
			this.InFieldMap = InFieldMap;
			this.OutCompositeAddressLocator = OutCompositeAddressLocator;
		}

		/// <summary>
		/// <para>Tool Display Name : Create Composite Address Locator</para>
		/// </summary>
		public override string DisplayName => "Create Composite Address Locator";

		/// <summary>
		/// <para>Tool Name : CreateCompositeAddressLocator</para>
		/// </summary>
		public override string ToolName => "CreateCompositeAddressLocator";

		/// <summary>
		/// <para>Tool Excute Name : geocoding.CreateCompositeAddressLocator</para>
		/// </summary>
		public override string ExcuteName => "geocoding.CreateCompositeAddressLocator";

		/// <summary>
		/// <para>Toolbox Display Name : Geocoding Tools</para>
		/// </summary>
		public override string ToolboxDisplayName => "Geocoding Tools";

		/// <summary>
		/// <para>Toolbox Alise : geocoding</para>
		/// </summary>
		public override string ToolboxAlise => "geocoding";

		/// <summary>
		/// <para>Valid Environment Params</para>
		/// </summary>
		public override string[] ValidEnvironments => new string[] { "configKeyword", "outputCoordinateSystem" };

		/// <summary>
		/// <para>Tool Parametrs</para>
		/// </summary>
		public override object[] Parameters => new object[] { InAddressLocators, InFieldMap, InSelectionCriteria!, OutCompositeAddressLocator };

		/// <summary>
		/// <para>Address Locators</para>
		/// <para>The locators that will be used to create the composite locator. The order of the participating locators determines how candidates are searched and a place or address is matched. When you geocode a single place or address, the place or address will be matched against all participating locators unless the locator is specified with a selection criterion. All the found candidates will be displayed based on the order of the listed participating locators. If you geocode a table of addresses or places, addresses or places are matched automatically to the first best candidate found from the first participating locators. If the address or place fails to match, it will fall back to the subsequent locator in the list.</para>
		/// <para>A reference name for each participating locator is required. This is the name of the locator referred to by the composite locator. Do not use spaces or special symbols in the name. The maximum length of the name is 14 characters.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.must)]
		[GPValueTable()]
		public object InAddressLocators { get; set; }

		/// <summary>
		/// <para>Field Map</para>
		/// <para>The mapping of input fields used by each participating locator to the input fields of the composite locator.</para>
		/// <para>The fields and field contents that are generated by the participating locators. Each of the unique input fields is listed in the Field Map section. When you expand the section, a list of all the input field occurrences (subfields) for each participating address locator is shown. These fields are the input fields for the composite address locator. If there are duplicate fields such as ZIP and Postcode because of the unique names populated from the participating address locators, you can group the subfields by dragging them to the appropriate field or use the Arrow Up or Arrow Down button to move the subfield.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.must)]
		[GPFieldMapping()]
		public object InFieldMap { get; set; }

		/// <summary>
		/// <para>Selection criteria</para>
		/// <para>Selection criteria for each participating locator. Only one selection criterion is supported for each participating locator.</para>
		/// <para>When building a composite address locator, you can specify which address locators are used based on the values of input address fields. For example, if the composite address locator uses a locator that contains street data for a specific city, you can filter out any addresses or places that do not have that city name. Using selection criteria will disqualify participating address locators that do not meet the criteria for a particular address so that the geocoding process will be more efficient. For instance, if a street address locator is specified with a selection criterion as &quot;City&quot; = &apos;Atlanta&apos;, only addresses that contain the city name Atlanta will be geocoded using this locator.</para>
		/// <para>To specify a selection criterion, check the locator check box under the Selection Criteria column that you want to apply the criterion to. You can enter an expression such as &quot;City&quot; = &apos;Atlanta&apos; in the text box or click the more button to open the Specify Locator Selection Criteria dialog box and define the criteria.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.optional)]
		[GPValueTable()]
		public object? InSelectionCriteria { get; set; }

		/// <summary>
		/// <para>Output Composite Address Locator</para>
		/// <para>The composite address locator that will be created. ArcGIS Pro only supports saving locators in a file folder.</para>
		/// </summary>
		[ParamType(ParamTypeEnum.must)]
		[DEAddressLocator()]
		public object OutCompositeAddressLocator { get; set; }

		/// <summary>
		/// <para>Only Set The Valid Environment For This Tool</para>
		/// </summary>
		public CreateCompositeAddressLocator SetEnviroment(object? configKeyword = null , object? outputCoordinateSystem = null )
		{
			base.SetEnv(configKeyword: configKeyword, outputCoordinateSystem: outputCoordinateSystem);
			return this;
		}

	}
}
